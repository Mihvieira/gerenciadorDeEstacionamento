# Tipos de entrada
input DadosPessoaisInput {
  nome: String!
  cnpj: String!
  endereco: EnderecoInput!
  telefone: String!
}

input EnderecoInput {
  rua: String!
  cidade: String!
  estado: String!
  cep: String!
  uf: String!
  complemento: String
  numero: String
}

# Tipos principais
type DadosPessoais {
  nome: String!
  cnpj: String!
  endereco: Endereco!
  telefone: String!
}

type Endereco {
  rua: String!
  cidade: String!
  estado: String!
  cep: String!
  uf: String!
  complemento: String
  numero: String
}

type Estacionamento {
  id: ID!
  dadosPessoais: DadosPessoais!
  qtdMaxMotos: Int!
  qtdMaxCarros: Int!
}

type Vaga {
  id: ID!
  setor: String!
  tipoVaga: TipoVeiculo!
  estadoVaga: EstadoVaga!
  registros: [Registro!]!
}

type Veiculo {
  id: ID!
  placa: String!
  modelo: String!
  cor: String!
  tipo: TipoVeiculo!
  registros: [Registro!]!
}

type Registro {
  id: ID!
  vaga: Vaga!
  veiculo: Veiculo!
  entrada: String!
  saida: String
}

# Enumerações para tipos de vaga e veículo
enum EstadoVaga {
  DESOCUPADA
  OCUPADA
}

enum TipoVeiculo {
  CARRO
  MOTO
}

# Consultas para buscar dados
type Query {
  vagas: [Vaga!]!
  vagaPorId(id: ID!): Vaga
  veiculos: [Veiculo!]!
  veiculoPorId(id: ID!): Veiculo
  veiculoPorPlaca(placa: String!): Veiculo
  registros: [Registro!]!
  registroPorId(id: ID!): Registro
  estacionamentos: [Estacionamento!]!
}

# Mutations para criar e atualizar dados
type Mutation {
  criarVaga(setor: String!, tipoVaga: TipoVeiculo!): Vaga!
  excluirVaga(id: ID!): Boolean!
  atualizarEstadoVaga(id: ID!, estadoVaga: EstadoVaga!): Vaga!

  criarVeiculo(placa: String!, modelo: String!, tipo: TipoVeiculo!): Veiculo!
  excluirVeiculo(id: ID!): Boolean!
  atualizarVeiculo(id: ID!, placa: String!, modelo: String!, tipo: TipoVeiculo!): Veiculo!

  criarRegistro(vagaId: ID!, veiculoId: ID!, entrada: String!, saida: String!): Registro!
  excluirRegistro(id: ID!): Boolean!
  atualizarRegistro(id: ID!, saida: String!): Registro!
  
  criarEstacionamento(dadosPessoais: DadosPessoaisInput!, qtdMaxCarros: Int, qtdMaxMotos: Int): Estacionamento!
  excluirEstacionamento(id: ID!): Boolean!
}